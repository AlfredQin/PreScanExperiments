checklights(1)
vismanager.setSimulationFrequency(20)
vismanager.initDefaultLight(True)
light_root.sun.setDirection(-1, 1, -1)
light_root.sun.setAmbient(0.5882353, 0.5882353, 0.5882353, 1)
light_root.sun.setDiffuse(0.4117647, 0.4117647, 0.4117647, 1)
light_root.sun.setSpecular(0.5882353, 0.5882353, 0.5882353, 1)
light_root.sun.setConstantAttenuation(0)
light_root.setGlobalAmbientColor(0, 0, 0, 1.0)
light_root.sun.setIntensity(1)
light_root.sun.setShadowMode(visnodes.VisLight.ShadowMode.SHADOW_SOFT)

light_root.setShadowsContrast(0.7, 0.3)
light_root.setMinimumWorldBBox(True, -46.11636, -60.39194, 0, 350.2586, 95.55361, 0)
light_root.setShadowSoftnessWidth(0.00075);light_root.setShadowJitteringScale(32)

skybox_visual_world = visnodes.VisBackground.createSkybox(r"skybox_visual_world", r"SKY_Air")
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world);mat.setColors(1.176471, 1.176471, 1.176471, 1.0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
skybox_visual_world_bottom = visnodes.VisTerrain.createTerrain(r"skybox_visual_world_bottom", 1000, 1000, r"Air_terrain.png", 20000, 20000, -50, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world_bottom);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0, 0, 0, 1)
skybox_visual_world_container = visnodes.VisTransform.createTransformNode(r"skybox_visual_world_container", True)
skybox_visual_world_container.setNodeMask(8, False)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world_container.ColorCoded, True, True);mat.setDiffuseColor(0/255.0, 0/255.0, 0/255.0, 1.0)
skybox_visual_world_container.Content.addChild(skybox_visual_world)
non_shader_scene.addChild(skybox_visual_world_container)

terrain_visual_world = visnodes.VisTerrain.createTerrain(r"terrain_visual_world", 1377.5, 1148.52, "Air_terrain.png", 1377.5, 1148.52)
mat = visnodes.VisMaterial_createAndSetVisMaterial(terrain_visual_world);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1, 0.7843137, 0.7843137, 0.7843137, 1, 0, 0, 0, 1, 0, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setShininess(0);mat.applyComponents(terrain_visual_world, mat.SHININESS, True)
terrain_visual_world_container = visnodes.VisTransform.createTransformNode(r"terrain_visual_world_container", True)
terrain_visual_world_container.setNodeMask(16, False)
mat = visnodes.VisMaterial_createAndSetVisMaterial(terrain_visual_world_container.ColorCoded, True, True);mat.setDiffuseColor(0/255.0, 0/255.0, 0/255.0, 1.0)
terrain_visual_world_container.Content.addChild(terrain_visual_world)
scene.addChild(terrain_visual_world_container)
terrain_visual_world_container.Content.addChild(skybox_visual_world_bottom)
terrain_visual_world.setTranslation(152.07110595703125, 17.580810546875, 0)

Daf_95_1 = visnodes.VisTransform.load( r"Daf_95_1", r"DAF_95_truck.psIve", True, False )
Daf_95_1.Content.setNodeMask(0xFFFFFFFF, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(Daf_95_1.ColorCoded, True, True);mat.setDiffuseColor(255/255.0, 255/255.0, 255/255.0, 1.0)
Daf_95_1.setNodeMask(70016, False)
Daf_95_1.Content.setNodeMask(4294967199, False)
scene.addChild(Daf_95_1)
scene.Daf_95_1.setTranslation(13.89128236074183, 5.3221881413189225, 0)
scene.Daf_95_1.setRotation(3.4808806359242147E-06, 0, 0, -1)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.IndicatorsL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.5411765, 0.2705882, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.IndicatorsR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.FogLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.FogLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.FogLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.MainLightRL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.MainLightRR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.MainLightFL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.1019608, 0.1019608, 0.1019608, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.MainLightFR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.BrakeLightL, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3607843, 0, 0, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.BrakeLightR, mat.ALL_RGB, True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.2, 0.2, 0.2, 1, 0.3019608, 0.3019608, 0.3019608, 1, 0.4, 0.4, 0.4, 1, 0, 0, 0, 1);mat.applyComponents(scene.Daf_95_1.BackupLightR, mat.ALL_RGB, True)

ContainerTrailer_DoubleAxle_1 = visnodes.VisTransform.load( r"ContainerTrailer_DoubleAxle_1", r"DAF_95_trailer.psIve", True, False )
ContainerTrailer_DoubleAxle_1.Content.setNodeMask(0xFFFFFFFF, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(ContainerTrailer_DoubleAxle_1.ColorCoded, True, True);mat.setDiffuseColor(127/255.0, 127/255.0, 0/255.0, 1.0)
ContainerTrailer_DoubleAxle_1.setNodeMask(70016, False)
ContainerTrailer_DoubleAxle_1.Content.setNodeMask(4294967199, False)
scene.addChild(ContainerTrailer_DoubleAxle_1)
scene.ContainerTrailer_DoubleAxle_1.setTranslation(5.3172823608018032, 5.3222202142804651, 0.17100000000000004)
scene.ContainerTrailer_DoubleAxle_1.setRotation(3.728388451694738E-06, 0, 0, -1)

world = visnodes.VisTransform.load("world", "world.osg", False)
scene.addChild(world)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_1_Asphalt_Geode, 2, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_2_Asphalt_Geode, 14, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_3_Asphalt_Geode, 15, 0.05, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_3_Asphalt_Geode, 16, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_4_Asphalt_Geode, 17, 0.0499999618530564, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_4_Asphalt_Geode, 18, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_2_Asphalt_Geode, 13, 0.0499999856948893, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_5_Asphalt_Geode, 19, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_5_Asphalt_Geode, 12, 0.249998092665919, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_6_Asphalt_Geode, 22, 0.142857405604632, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_7_Asphalt_Geode, 24, 0.1, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_8_Asphalt_Geode, 25, 0.04545452180974, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_9_Asphalt_Geode, 11, 0.0624999850988424, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_10_Asphalt_Geode, 26, 0.0999999427795738, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_11_Asphalt_Geode, 28, 0.0526316000814338, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.BendRoad_12_Asphalt_Geode, 27, 0.0769229527763249, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_8_Asphalt_Geode, 30, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_9_Asphalt_Geode, 31, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_10_Asphalt_Geode, 32, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_11_Asphalt_Geode, 33, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_12_Asphalt_Geode, 34, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.StraightRoad_7_Asphalt_Geode, 29, 0, 1)
visviewer.VisLaneMarkerViewer.setAsphaltData(scene.CurvedRoad_8_Asphalt_Geode, 23, 0, 1)
HumanView_1_mount = visnodes.VisTransform.createTransformNode(r"HumanView_1_mount")
Daf_95_1.addChild(HumanView_1_mount)
scene.getTransformChild("HumanView_1_mount")
HumanView_1_mount.setTranslation(12, 10, 12)
HumanView_1_mount.setRotation(3.6469531638739507, -0.25819888974716104, -0.069184183994364309, 0.96361137499428018)
HumanView_1 = visviewer.VisCamera(r"HumanView_1")
HumanView_1_mount.addChild(HumanView_1)
HumanView_1.setTranslation(0, 0, 0)
HumanView_1.setRotationLegacyYUpAxes(1.5707963267948966, 0, 0, -1)
HumanView_1.setHomePositions()

HumanView_1.setProjectionMatrixPerspective(2.0943951023931953, 1.5707963267948966, 0.01, 750)
cameras[r"HumanView_1"] = VisCameras.CameraInfo(r"HumanView_1", HumanView_1, visviewer.VisViewerBase.SPECTATOR, visviewer.VisViewerBase.HUMAN_EYE, True)
TopDownView_mount = visnodes.VisTransform.createTransformNode(r"TopDownView_mount")
Daf_95_1.addChild(TopDownView_mount)
scene.getTransformChild("TopDownView_mount")
TopDownView_mount.setTranslation(-3, 0, 12)
TopDownView_mount.setRotation(1.2217304763960306, 0, 1, 0)
TopDownView = visviewer.VisCamera(r"TopDownView")
TopDownView_mount.addChild(TopDownView)
TopDownView.setTranslation(0, 0, 0)
TopDownView.setRotationLegacyYUpAxes(1.5707963267948966, 0, 0, -1)
TopDownView.setHomePositions()

TopDownView.setProjectionMatrixPerspective(2.0943951023931953, 1.5707963267948966, 0.01, 750)
cameras[r"TopDownView"] = VisCameras.CameraInfo(r"TopDownView", TopDownView, visviewer.VisViewerBase.SPECTATOR, visviewer.VisViewerBase.HUMAN_EYE, True)
light_root.generateShaderFromTemplateClassic()
